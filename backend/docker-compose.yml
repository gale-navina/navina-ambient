version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: navina_db
      POSTGRES_USER: navina_user
      POSTGRES_PASSWORD: navina_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U navina_user -d navina_db" ]
      interval: 5s
      timeout: 5s
      retries: 5

  core_service:
    build: ./core_service
    ports:
      - "0.0.0.0:8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379
      - AUDIO_PROCESSING_SERVICE_URL=http://audio_processing:8001
      - SUMMARIZATION_SERVICE_URL=http://summarization:8002
      - MOCK_NAVINA_INSIGHTS_URL=http://mock_navina:8003
      - DATABASE_URL=postgresql://navina_user:navina_password@postgres/navina_db
      - LOG_LEVEL=DEBUG
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      audio_processing:
        condition: service_started
      summarization:
        condition: service_started
      mock_navina:
        condition: service_started


  audio_processing:
    build: ./audio_processing_service
    ports:
      - "0.0.0.0:8001:8001"
    environment:
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-}
    volumes:
      - ./audio_processing_service:/app
      - ./aws_credentials:/tmp/aws_credentials
    depends_on:
      - redis
      - localstack-init

  summarization:
    build: ./summarization_service
    ports:
      - "0.0.0.0:8002:8002"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LOG_LEVEL=DEBUG


  mock_navina:
    build: ./navina_insights_service
    ports:
      - "0.0.0.0:8003:8003"

  redis:
    image: "redis:alpine"
    ports:
      - "0.0.0.0:6379:6379"

  localstack:
    image: localstack/localstack
    ports:
      - "0.0.0.0:4566:4566"
    environment:
      - SERVICES=iam,sts,kinesis
      - AWS_DEFAULT_REGION=us-east-1
      - DEBUG=1
      - LOCALSTACK_API_KEY="ls-rOmisAYE-KUCE-tiNU-SODU-03708869617_"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # Allow access to Docker
    healthcheck:
      test: [ "CMD-SHELL", "curl -s http://localhost:4566/_localstack/health | grep 'running'" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s

  localstack-init:
    image: localstack/localstack
    depends_on:
      - localstack
    volumes:
      - ./setup_localstack.sh:/setup_localstack.sh
      - ./aws_credentials:/tmp/aws_credentials
    entrypoint: [ "sh", "-c", "sh /setup_localstack.sh" ]

volumes:
  postgres_data:
  redis_data: